references:
  base: &base
    docker:
      - image: circleci/node:10.16.0
    working_directory: ~/marp-vscode
    steps:
      # https://github.com/nodejs/docker-node/blob/master/docs/BestPractices.md#upgradingdowngrading-yarn
      - run:
          name: Upgrade yarn
          command: |
            sudo -E sh -c 'curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz" \
                           && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \
                           && ln -snf /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \
                           && ln -snf /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \
                           && rm yarn-v$YARN_VERSION.tar.gz'
          environment:
            YARN_VERSION: 1.16.0

      - checkout

      - restore_cache:
          keys:
            - dependencies-{{ .Environment.CI_CACHE_KEY }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "yarn.lock" }}-{{ .Branch }}
            - dependencies-{{ .Environment.CI_CACHE_KEY }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "yarn.lock" }}-
            - dependencies-{{ .Environment.CI_CACHE_KEY }}-{{ .Environment.CIRCLE_JOB }}-

      - run: yarn install

      # TODO: Use `yarn audit` to report audit of devDependencies
      - run: yarn check:audit

      - save_cache:
          key: dependencies-{{ .Environment.CI_CACHE_KEY }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "yarn.lock" }}-{{ .Branch }}
          paths:
            - node_modules
            - ~/.cache/yarn

      - run:
          name: Prettier formatting
          command: yarn check:format

      - run:
          name: TypeScript type checking
          command: yarn check:ts

      - run:
          name: TSLint
          command: yarn lint:ts

      - run:
          name: stylelint
          command: yarn lint:css

      - run:
          name: Unit test
          command: yarn test:unit:coverage --ci --maxWorkers=2 --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: tmp/test-results/jest.xml

      - run: yarn codecov

      - store_test_results:
          path: tmp/test-results

      - store_artifacts:
          path: ./coverage
          destination: coverage

version: 2
jobs:
  test:
    <<: *base

  github-release:
    <<: *base
    steps:
      - checkout
      - run:
          name: Create release on GitHub
          command: curl https://raw.githubusercontent.com/marp-team/marp/master/github-release.js | node

workflows:
  version: 2
  build:
    jobs:
      - test
      - github-release:
          context: github-release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
